@import './variables';

@function alignment($align) {
    @return map-get($alignment-values, $align);
};

@function space-element($space) {
    @return map-get($static-element-space, $space);
};

@function set-flex-width($width) {
    @return map-get($flex-width, $width);
};

@function resolution($size) {
    @return map-get($resolution-names, $size);
};

/* set default card dimensions */
@mixin card-dimensions {
    width: 90%;
    max-width: 600px;
    min-width: 200px;
    margin: alignment("centered");
}

@mixin nav-link-no-decorate {
    color: white !important;
    text-decoration: none;
}

@mixin center-content-flex {
    justify-content: center;
    align-items: center;
    text-align: center;
}

@mixin flex-full-column {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
}

@mixin set-flex-container($width, $important: false) {
    flex: set-flex-width($width) if($important==true,!important,());
    -ms-flex: set-flex-width($width) if($important==true,!important,());
    width: map-get($flex-width-single, $width);
}

@mixin set-flex-unbound($width, $margin: $dashboard-margin) {
    flex: 0 0 $width;
    -ms-flex: 0 0 $width;
    width: $width;
    @if ($margin != 0) {margin: $margin; }
}

@mixin flex-display($width, $justify){
    @if ($width == "small"){
        @include set-flex-container("small");
    }
    @else {
        @include set-flex-container("medium");
    }
    display: flex;
    justify-content: $justify;
}

@mixin full-width-flex {
    flex: 0 0 100%;
    -ms-flex: 0 0 100%;
    width: 100%;
    display: flex;
    justify-content: center;
}

@mixin row-flex($justify, $wrap: false) {
    display: flex;
    flex-direction: row;
    justify-content: $justify;
    @if ($wrap == true) {
        flex-wrap: wrap;
    }
}

@mixin create-aspect-ratio($height, $numerator, $denomonator){
    height: $height;
    width: calc(#{height} * 16 / 9);
}

@mixin center-button-50px{
    max-width: 50px;
    margin: 0 auto;
}

@mixin set-hover-bg-color($variant){
    &:hover {
        background-color: $variant;
    }
}

@mixin create-box-shadow($radius, $color) {
    box-shadow: 0 0 $radius $color;
    -moz-box-shadow: 0 0 $radius $color;
}